参考网址：http://blog.csdn.net/yjn03151111/article/details/41244713
xargs: 用于执行命令，执行的命令需要有输入，强大之处在于它可以执行所执行命令的运行环境，比如是否并行等
xargs与其他命令在一起使用的例子:
find . -name "*.txt" -print0 | xargs -0 rm -rf  #查找并且输出文件.txt结尾的文件
find . -name "*.c" | xargs grep 'stdlib.h'  #查找内容包含stdlib.h的文件


FIFO（命名管道）相当于是一种先进先出的队列，对他的访问时唯一的，所以可以用FIFO实现进程并发。
为了实现多个进程并行化，我们创建一个FIFO文件作为进程池，并通过设置一定数目的“令牌”实现并发进程的数目。每个进程依次进入进程池领取“令牌”，若领取成功（有空余令牌）则运行，完成后归还令牌；若领取失败，则等待其它进程释放令牌。

其他常见的用于并行的操作：
1. &

for ((i=1, i<3, i=i+1)); do
	./test.sh xx &
done

2. Ctrl Z + bg
Ctrl Z 实现的是讲运行的进程挂起，bg实现将进程放到后台继续运行。

两种方法都会返回一个该进程的后台编号，表示该进程正在后台运行。我们可以通过 jobs 命令查看当前后台进程，也可以通过 fg %<id> 将进程放回前台。